buildscript {
    ext.kotlin_version = '1.3.31'
    ext.serialization_version = '0.11.0'

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
    }
}

plugins {
    id 'org.springframework.boot' version '2.1.3.RELEASE'
    id 'org.jetbrains.kotlin.jvm' version '1.3.31'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.3.31'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'kotlinx-serialization'
apply plugin: 'kotlin'

apply from: file("$rootProject.projectDir/gradle/heroku/stage.gradle")

group = 'ch.zuehlke.camp.werewolf'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

ext.junit5Version = '5.4.1'

bootJar {
    into('static') {
        from('../frontend/dist/werewolf/')
    }
}
bootJar.dependsOn ":frontend:npm_run_dist"

test {
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"
    }
}

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://kotlin.bintray.com/kotlinx" }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.1'
    compile "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serialization_version"

    compile 'org.springframework.boot:spring-boot-starter-data-rest'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.postgresql:postgresql'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testCompile 'com.jayway.jsonpath:json-path:2.2.0'
    testCompile 'org.hamcrest:hamcrest:2.1'

    implementation platform("org.junit:junit-bom:${junit5Version}")
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}
